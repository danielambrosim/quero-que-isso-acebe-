generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model carteira {
  id                                                Int              @id @default(autoincrement())
  nome                                              String           @db.VarChar(255)
  id_usuario                                        Int
  usuario                                           usuario          @relation(fields: [id_usuario], references: [id], onDelete: Cascade, onUpdate: NoAction)
  carteira_cripto                                   carteira_cripto?
  transacao_transacao_id_carteira_destinoTocarteira transacao[]      @relation("transacao_id_carteira_destinoTocarteira")
  transacao_transacao_id_carteira_origemTocarteira  transacao[]      @relation("transacao_id_carteira_origemTocarteira")
}

model carteira_cripto {
  id_carteira    Int         @unique @default(autoincrement())
  id_criptoativo Int         @unique
  quantidade     Decimal     @db.Decimal(30, 8)
  carteira       carteira    @relation(fields: [id_carteira], references: [id], onDelete: Cascade, onUpdate: NoAction)
  criptoativo    criptoativo @relation(fields: [id_criptoativo], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id_carteira, id_criptoativo])  // Definindo a chave composta
}


model criptoativo {
  id              Int              @id @default(autoincrement())
  nome            String           @db.VarChar(255)
  codigo          String           @unique @db.VarChar(3)
  preco           Decimal          @db.Decimal(30, 8)
  carteira_cripto carteira_cripto?
  transacao       transacao?
}

model transacao {
  id                                               Int         @id @default(autoincrement())
  id_carteira_origem                               Int
  id_carteira_destino                              Int
  id_criptoativo                                   Int         @unique
  quantidade                                        Decimal     @db.Decimal(30, 8)
  tipo                                             String      @db.VarChar(20)
  data                                             DateTime    @db.Timestamp(6)
  carteira_transacao_id_carteira_destinoTocarteira carteira    @relation("transacao_id_carteira_destinoTocarteira", fields: [id_carteira_destino], references: [id], onDelete: Cascade, onUpdate: NoAction)
  carteira_transacao_id_carteira_origemTocarteira  carteira    @relation("transacao_id_carteira_origemTocarteira", fields: [id_carteira_origem], references: [id], onDelete: Cascade, onUpdate: NoAction)
  criptoativo                                      criptoativo @relation(fields: [id_criptoativo], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model usuario {
  id       Int        @id @default(autoincrement())
  nome     String     @db.VarChar(255)
  login    String     @unique @db.VarChar(50)
  senha    String     @unique @db.VarChar(30)
  carteira carteira[]
}
